datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

enum Role {
  ADMIN
  USER
}

model User {
  id                  String       @id @default(cuid())
  email               String       @unique
  hashedPassword      String?
  salt                String?
  resetToken          String?
  resetTokenExpiresAt DateTime?
  verified            Boolean      @default(false)
  verifiedToken       String?
  roles               Role         @default(USER)
  audits              Audit[]
  userProfile         UserProfile?
  avatar              Avatar?
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @default(now()) @updatedAt
}

model UserProfile {
  id        String   @id @default(cuid())
  userId    String   @unique
  firstname String?
  lastname  String?
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Audit {
  id        String   @id @default(uuid())
  userId    String
  log       String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Avatar {
  id              String   @id @default(cuid())
  userId          String   @unique
  avatarStyle     String
  topType         String
  accessoriesType String
  hatColor        String
  hairColor       String
  facialHairType  String
  facialHairColor String
  clotheType      String
  clotheColor     String
  graphicType     String
  eyeType         String
  eyebrowType     String
  mouthType       String
  skinColor       String
  user            User     @relation(fields: [userId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt
}
